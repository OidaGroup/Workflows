name: Build website

on:
  workflow_call:
    secrets:
      COMPOSER_AUTH:
        required: false
    inputs:
      package_manager:
        required: false
        description: Package manager to use
        default: pnpm
        type: string
      push:
        required: false
        description: Push files back to github
        default: false
        type: boolean
      php_version:
        required: true
        description: PHP version to use
        type: string
      upload:
        required: false
        description: Define which files should be uploaded
        default: .docker bin DistributionPackages Data Packages Web composer.json composer.lock flow auth.json
        type: string

jobs:
  website:
    env:
      COMPOSER_AUTH: ${{secrets.COMPOSER_AUTH}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.4
        if: ${{ inputs.package_manager == 'pnpm' }}
        with:
          version: latest

      - name: Setup node
        uses: actions/setup-node@v3.5.1
        with:
          node-version-file: .nvmrc
          cache: ${{ inputs.package_manager }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.php_version }}
          tools: composer:v2
          extensions: mbstring, intl

      - name: Configure composer authentication
        if: ${{ env.COMPOSER_AUTH }}
        run: composer config --auth ${{ env.COMPOSER_AUTH }}

      - name: Get composer cache directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Restore composer cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install packages with composer
        run: composer install --no-interaction --no-ansi --optimize-autoloader --no-progress --prefer-dist

      - name: Build JS and CSS
        run: ${{ inputs.package_manager }} run pipeline

      - name: Remove dev dependencies
        run: composer install --no-interaction --no-ansi --optimize-autoloader --no-progress --prefer-dist --no-dev

      - name: Compress files
        if: ${{ inputs.upload }}
        run: tar -cvf build.tar ${{ inputs.upload }}

      - name: Upload file
        uses: actions/upload-artifact@v3
        if: ${{ inputs.upload }}
        with:
          name: build
          path: build.tar
