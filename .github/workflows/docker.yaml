name: Build docker image

on:
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        description: 'docker hub username'
        required: false
      DOCKERHUB_TOKEN:
        description: 'docker hub token'
        required: false
    inputs:
      artifact:
        type: string
        default: build
        description: Name of the artifact to download & deploy
      tags:
        required: true
        type: string
        description: Tags for docker image
      platforms:
        type: string
        default: linux/amd64
        description: Platforms for docker image
      dockerfile:
        type: string
        default: ./.docker/Dockerfile
        description: Dockerfile to use

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx
        with:
          install: true

      - name: Login to Github Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub Registry
        env:
            dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
        if: ${{ env.dockerhub_username }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v4
        if: ${{ inputs.artifact == '' }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        if: ${{ inputs.artifact != '' }}
        with:
          name: ${{ inputs.artifact }}

      - name: Unpack artifact
        if: ${{ inputs.artifact != '' }}
        run: tar -xvf ${{ inputs.artifact }}.tar

      - name: Build Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          push: true
          tags: ${{ inputs.tags }}
          platforms: ${{ inputs.platforms }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Delete artifact
        if: ${{ inputs.artifact != '' }}
        uses: geekyeggo/delete-artifact@v4
        with:
          name: ${{ inputs.artifact }}
          failOnError: false
          token: ${{ secrets.GITHUB_TOKEN }}
