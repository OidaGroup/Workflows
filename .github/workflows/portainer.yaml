name: Deploy to Portainer

on:
  workflow_call:
    secrets:
      PORTAINER_WEBHOOK_URL:
        description: "Webhook URL of the Portainer instance"
        required: false
      PORTAINER_HOST:
        description: "Host of the Portainer instance"
        required: true
      PORTAINER_USERNAME:
        description: "Username of the Portainer instance"
        required: true
      PORTAINER_PASSWORD:
        description: "Password of the Portainer instance"
        required: true
      PORTAINER_SWARM_ID:
        description: "Swarm ID of the Portainer instance"
        required: true
      MARIADB_ROOT_PASSWORD:
        description: "Root password of the MariaDB instance"
        required: false
      NEOS_DB_HOST:
        description: "Host of the Neos database"
        required: true
      NEOS_DB_PASSWORD:
        description: "Password of the Neos database"
        required: true
      MAUTIC_USER:
        description: "User of the Mautic instance"
        required: false
      MAUTIC_PASSWORD:
        description: "Password of the Mautic instance"
        required: false
      MAUTIC_DB_HOST:
        description: "Host of the Mautic database"
        required: false
      MAUTIC_DB_PASSWORD:
        description: "Password of the Mautic database"
        required: false
      PEXELS_API_KEY:
        description: "API key of the Pexels API"
        required: true
      ELASTICSEARCH_USERNAME:
        description: "Username of the Elasticsearch instance"
        required: true
      ELASTICSEARCH_PASSWORD:
        description: "Password of the Elasticsearch instance"
        required: true
      MAILER_DSN:
        description: "Transport Setup from symfony"
        required: false
      ZAMMAD_TOKEN:
        description: "Token for Zammad instance"
        required: false
    inputs:
      stack_name:
        type: string
        description: "Name of the stack"
        required: true
      stack_name_lowercase:
        type: string
        description: "Name of the stack in lowercase"
        required: true
      image_tag:
        type: string
        description: "Tag of the image"
        required: true
      timezone:
        type: string
        default: "Europe/Vienna"
        description: "Timezone"
        required: false
      mailer_from:
        type: string
        description: "E-Mail address sender for forms"
        required: false
      portainer_stack_name:
        type: string
        default: "production"
        description: "Name of the stack in Portainer"
        required: false
      stack_prefix:
        type: string
        default: ""
        description: "Prefix the stack in Portainer"
        required: false

jobs:
  portainer:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.portainer_stack_name }}
      url: ${{ github.event.repository.homepage }}
    steps:
      - name: Wait 10 seconds
        shell: bash
        run: sleep 10s
      - name: Create summary
        run: echo '### Deployment for [${{ inputs.stack_name }}](${{ github.event.repository.homepage }}) :rocket:' >> $GITHUB_STEP_SUMMARY
      - name: Clone Repository
        uses: actions/checkout@v4
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      - name: Deploy stack to Portainer
        uses: carlrygart/portainer-stack-deploy@v1
        with:
          portainer-host: ${{ secrets.PORTAINER_HOST }}
          username: ${{ secrets.PORTAINER_USERNAME }}
          password: ${{ secrets.PORTAINER_PASSWORD }}
          swarm-id: ${{ secrets.PORTAINER_SWARM_ID }}
          stack-name: "${{ inputs.stack_prefix }}${{ inputs.stack_name_lowercase }}-${{ inputs.portainer_stack_name }}"
          stack-definition: ".docker/stack.yml"
          template-variables: >-
            {
              "NEOS_IMAGE_TAG": "${{ inputs.image_tag }}",
              "MAILER_FROM": "${{ inputs.mailer_from }}",
              "MAILER_DSN": "${{ secrets.MAILER_DSN }}",
              "TIMEZONE": "${{ inputs.timezone }}",
              "PORTAINER_STACK_NAME": "${{ inputs.portainer_stack_name }}",
              "CUSTOMER": "${{ inputs.stack_name }}",
              "CUSTOMER_LOWERCASE": "${{ inputs.stack_name_lowercase }}",
              "RELEASE_DATE": "${{ steps.date.outputs.date }}",
              "NEOS_DB_HOST": "${{ secrets.NEOS_DB_HOST }}",
              "NEOS_DB_PASSWORD": "${{ secrets.NEOS_DB_PASSWORD }}",
              "MAUTIC_USER": "${{ secrets.MAUTIC_USER }}",
              "MAUTIC_PASSWORD": "${{ secrets.MAUTIC_PASSWORD }}",
              "MAUTIC_DB_HOST": "${{ secrets.MAUTIC_DB_HOST }}",
              "MAUTIC_DB_PASSWORD": "${{ secrets.MAUTIC_DB_PASSWORD }}",
              "NEOS_S3_ENDPOINT": "${{ secrets.NEOS_S3_ENDPOINT }}",
              "NEOS_S3_SECRET": "${{ secrets.NEOS_S3_SECRET }}",
              "SHOPWARE_APP_URL": "${{ secrets.SHOPWARE_APP_URL }}",
              "SHOPWARE_APP_SECRET": "${{ secrets.SHOPWARE_APP_SECRET }}",
              "SHOPWARE_DATABASE_PWD": "${{ secrets.SHOPWARE_DATABASE_PWD }}",
              "SHOPWARE_MAIL_PWD": "${{ secrets.SHOPWARE_MAIL_PWD }}",
              "PEXELS_API_KEY": "${{ secrets.PEXELS_API_KEY }}",
              "ELASTICSEARCH_USERNAME": "${{ secrets.ELASTICSEARCH_USERNAME }}",
              "ELASTICSEARCH_PASSWORD": "${{ secrets.ELASTICSEARCH_PASSWORD }}",
              "ZAMMAD_TOKEN": "${{ secrets.ZAMMAD_TOKEN }}"
            }
      - name: Check if webhook is present
        id: check_webhook
        shell: bash
        run: |
          if [ "$SECRET" == "" ]; then
            echo "output=NO" >> $GITHUB_OUTPUT
          else
            echo "output=YES" >> $GITHUB_OUTPUT
          fi
        env:
          SECRET: ${{ secrets.PORTAINER_WEBHOOK_URL }}
      - name: Wait 10 seconds
        if: (steps.check_webhook.outputs.output == 'YES')
        shell: bash
        run: sleep 10s
      - name: Send webhook to Portainer
        if: (steps.check_webhook.outputs.output == 'YES')
        uses: joelwmale/webhook-action@2.3.2
        with:
          url: ${{ secrets.PORTAINER_WEBHOOK_URL }}
